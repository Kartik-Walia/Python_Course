PYHTON SUPPORTS ALL DIFFERENT PROGRAMMING PARADIGMS:
- It supports Functional Programming
    If you can achieve a certain task implementing functions as a mathematical functions where you'll
    not maniuplate a data, which is instead of changing data you'll still accomplish a task.
    One of the way is you can pass a function to a function 
- It also works with Procedure Oriented Programming(POP)
    Whenever you work with python, we define functions, call function from a function. If u want to 
    create a software, you'll breakdown your project into small parts, those will be functions
- It supports Object Oriented Programming (OOP)
    If you're working on big softwares & enterprise projects, you need to think everything in a 
    format of objects 

OBJECT WILL HAVE 2 THINGS:
1. Every object will have certain attributes
    You can imagine attributes as data or you can say properties
    If you want to store some data in an object, we need to define variables
2. Every object will have certain behaviour
    Actions defines our behaviour
    If you want to define the behaviour, we need to use methods
    Functions in object oriented programming are called as "Methods"

Now, if u want to achieve anything in programming, you need to think about the object 
The moment you say you've a complex problem, think about the object, think about multiple objects and
how can you connect them
Because in OOPs we've many concepts like object, class, encapsulation, abstraction, polymorphism etc.


Just a like a phone is designed once & it is manufactured multiple times, here design is important
That design in programming or in OOPs, we say class 
So, in a class you'll write the design of the object 

Hence,
Class -> Design (or Blue-print) 
Object -> Instance (or Real entities)

Before creating a object you need to create a class, because class is the design for the object 
If you don't have design, how can you build something ?
So, if u want a object, you need to create a class first